version: "3.8"

# --------------------------
# Networks Configuration
# --------------------------
networks:
  spark-net:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.10.10.0/24
          gateway: 10.10.10.1

# --------------------------
# Volumes Configuration
# --------------------------
volumes:
  spark-logs:
    driver: local
  spark-data:
    driver: local
  spark-jobs:
    driver: local

# --------------------------
# Services Configuration
# --------------------------
services:
  spark-master:
    image: minhtramnp/spark_image:v1
    networks:
      - spark-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '2'
          memory: 8G
        reservations:
          cpus: '0.5'
          memory: 2G
      restart_policy:
        condition: on-failure
        max_attempts: 3
    environment:
      SPARK_MASTER_HOST: spark-master
      SPARK_LOCAL_IP: "{{.Task.Hostname}}"
      SPARK_PUBLIC_DNS: "{{.Task.Hostname}}"
    volumes:
      - spark-jobs:/opt/spark/jobs:ro
      - spark-data:/opt/spark/data:rw
      - spark-logs:/opt/spark/logs:rw
    ports:
      - target: 7077
        published: 7077
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    command: ["start-master.sh"]

  spark-worker:
    image: minhtramnp/spark_image:v1
    networks:
      - spark-net
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: '1'
          memory: 4G
        reservations:
          cpus: '0.3'
          memory: 1G
    environment:
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: 4g
    volumes:
      - spark-data:/opt/spark/data:rw
      - spark-logs:/opt/spark/logs:rw
    command: ["start-worker.sh", "spark://spark-master:7077"]

  spark-history:
    image: minhtramnp/spark_image:v1
    networks:
      - spark-net
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - spark-logs:/opt/spark/logs:ro
    ports:
      - target: 18080
        published: 18080
        protocol: tcp
        mode: host
    command: ["start-history-server.sh"]

# --------------------------
# Các lệnh triển khai
# --------------------------
# 1. Khởi tạo Swarm (trên manager node):
#    docker swarm init --advertise-addr <MANAGER-IP>

# 2. Triển khai stack:
#    docker stack deploy -c spark-stack.yml spark-cluster

# 3. Kiểm tra trạng thái:
#    docker service ls
#    docker service logs spark-cluster_spark-master
