# ==========================================
# 1. spark-pv.yaml
# ==========================================
apiVersion: v1
kind: PersistentVolume
metadata:
  name: spark-data-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data/spark"
  storageClassName: standard

---
# ==========================================
# 2. spark-pvc.yaml
# ==========================================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: spark-data-pvc
  namespace: spark-cluster
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
# ==========================================
# 3. spark-master-deployment.yaml
# ==========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-master
  namespace: spark-cluster
  labels:
    app: spark-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spark-master
  template:
    metadata:
      labels:
        app: spark-master
    spec:
      containers:
      - name: spark-master
        image: theanhhhhh/spark-custom:3.4.1
        command: ["/opt/spark/bin/spark-class"]
        args: ["org.apache.spark.deploy.master.Master", "--host", "0.0.0.0", "--port", "7077", "--webui-port", "8080"]
        ports:
        - containerPort: 7077
          name: spark-port
        - containerPort: 8080
          name: webui-port
        env:
        - name: SPARK_MASTER_HOST
          value: "0.0.0.0"
        - name: SPARK_MASTER_PORT
          value: "7077"
        - name: SPARK_MASTER_WEBUI_PORT
          value: "8080"
        - name: SPARK_NO_DAEMONIZE
          value: "true"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        volumeMounts:
        - name: spark-data
          mountPath: /tmp/spark-data
      volumes:
      - name: spark-data
        persistentVolumeClaim:
          claimName: spark-data-pvc

---
# ==========================================
# 4. spark-worker-deployment.yaml
# ==========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-worker
  namespace: spark-cluster
  labels:
    app: spark-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spark-worker
  template:
    metadata:
      labels:
        app: spark-worker
    spec:
      containers:
      - name: spark-worker
        image: theanhhhhh/spark-custom:3.4.1
        command: ["/opt/spark/bin/spark-class"]
        args: ["org.apache.spark.deploy.worker.Worker", "spark://spark-master:7077"]
        ports:
        - containerPort: 8081
          name: webui-port
        - containerPort: 8082
          name: worker-port
        env:
        - name: SPARK_WORKER_CORES
          value: "1"
        - name: SPARK_WORKER_MEMORY
          value: "512m"
        - name: SPARK_WORKER_WEBUI_PORT
          value: "8081"
        - name: SPARK_WORKER_PORT
          value: "8082"
        - name: SPARK_NO_DAEMONIZE
          value: "true"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
          limits:
            memory: "4Gi"
            cpu: "2"
        volumeMounts:
        - name: spark-data
          mountPath: /tmp/spark-data
      volumes:
      - name: spark-data
        persistentVolumeClaim:
          claimName: spark-data-pvc

---
# ==========================================
# 5. spark-master-service.yaml
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: spark-master
  namespace: spark-cluster
  labels:
    app: spark-master
spec:
  type: ClusterIP
  selector:
    app: spark-master
  ports:
    - name: spark
      port: 7077
      targetPort: 7077
    - name: webui
      port: 8080
      targetPort: 8080

---
# ==========================================
# 6. spark-master-headless-service.yaml
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: spark-master-headless
  namespace: spark-cluster
  labels:
    app: spark-master
spec:
  ports:
  - name: spark
    port: 7077
    targetPort: 7077
    protocol: TCP
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: spark-master
  clusterIP: None
  publishNotReadyAddresses: true
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
# ==========================================
# 7. spark-master-nodeport-service.yaml (For localhost access)
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: spark-master-nodeport
  namespace: spark-cluster
  labels:
    app: spark-master
spec:
  type: NodePort
  selector:
    app: spark-master
  ports:
    - name: spark
      port: 7077
      targetPort: 7077
      nodePort: 30078
    - name: webui
      port: 8080
      targetPort: 8080
      nodePort: 30082

---
# ==========================================
# 8. spark-worker-service.yaml
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: spark-worker
  labels:
    app: spark-worker
spec:
  type: ClusterIP
  selector:
    app: spark-worker
  ports:
    - name: webui
      port: 8081
      targetPort: 8081
    - name: worker
      port: 8082
      targetPort: 8082

---
# ==========================================
# 9. spark-worker-nodeport-service.yaml (Optional - for worker UI access)
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: spark-worker-nodeport
  labels:
    app: spark-worker
spec:
  type: NodePort
  selector:
    app: spark-worker
  ports:
    - name: webui
      port: 8081
      targetPort: 8081
      nodePort: 30081